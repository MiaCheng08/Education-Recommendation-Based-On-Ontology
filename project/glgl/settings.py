"""
Django settings for glgl project.

Generated by 'django-admin startproject' using Django 1.9.8.

For more information on this file, see
https://docs.djangoproject.com/en/1.9/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.9/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.9/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '-w_gp+y!^asl9!w=wnl-+^c*)y%$0moebi6#(p!os=2@wtsmhv'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True#置为True那么当应用有bug的时候不能运行应用

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',#使用该App可以访问一个admin网页
    'django.contrib.auth',
    #contains the core of the authentication framework, and its default models
    'django.contrib.contenttypes',
    #is the Django content type system,which allows permissions to be associated with models you create
    #以上两个是使用django自带的用户验证系统所必须的APP
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',#用来查询静态文件的，在开发阶段，Django把/static映射到
    #django.contrib.staticfiles这个App。staticfiles自动地从STATICFILES_DIRS、STATIC_ROOT以及各个
    #App的static子目录里面搜索静态文件。
    'glgl_app.apps.GlglAppConfig',  # this behavior is to tell Django this app has been installed
    #或者直接是glgl_app  这是glgl这个应用的app
]
#有INSTALLED_APPS可以看到，想要构建出自己想要的app可以配合Django自带的app们一起使用，这也是Django存在的意义
MIDDLEWARE_CLASSES = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    #manages sessions across requests
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    #associates users with requests using sessions
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'glgl.urls'#指明url配置的大boss在哪

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        #这是自己加的，将应用模板存放的目录加入path中，以便django在查询时会找这条路
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'glgl.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.9/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'giligili.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.9/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.10/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.10/howto/static-files/
STATIC_URL = '/static/'#用于静态文件
STATIC_ROOT = os.path.join(BASE_DIR,'static')#给Django框架内容使用

#AUTH_PROFILE_MODULE = 'glgl_app.UserExtraProfile'官网建议不再使用这个玩意，所以我把它隐去2017.02.26

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')#主要是用来放置上传的文件，真正的文件存放在该指定的目录下面，
# 而数据库中字段filefiled中只是记录上传的文件在文件系统中的路径，因为大多数数据库保存文件时效率低，这样做可以不让文件直接存储在数据库中。
MEDIA_URL = '/media/'#规定在访问上传的文件时的路径/url

#During development, you can serve user-uploaded media files from MEDIA_ROOT